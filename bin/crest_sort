#!/usr/bin/env Rscript

# PART I - check if packages already installed, if not exist
if(!("edgeR" %in% installed.packages()[,"Package"])){
	stop("R package edgeR not installed")
}
suppressMessages(library(edgeR))

# PART II - load in arguments
args <- commandArgs(trailingOnly = TRUE)
if(length(args) < 5){
    stop("too few arguments.")
}else{
    for(i in 1:length(args)){
		invisible(eval(parse(text=args[[i]])))
    }
}

if(!exists("FIN_NAME"))    stop("argument FIN_NAME missing")
if(!exists("TREAT_ID"))    stop("argument TREAT_ID missing")
if(!exists("CONTROL_ID"))  stop("argument CONTROL_ID missing")
if(!exists("FOUT_NAME"))   stop("argument FOUT_NAME missing")

if(!file.exists(FIN_NAME)) stop(FIN_NAME, " does not exist")

# PART IV - check input arguments
if(nrow(data <- read.table(FIN_NAME, head=TRUE, row.names=1))==0) stop("input crest matrix is empty")
if(length((TREAT_IDs=strsplit(TREAT_ID, ",")[[1]]))==0) stop("argument TREAT_ID must be seperated by comma without space")
if(length((CONTROL_IDs=strsplit(CONTROL_ID, ",")[[1]]))==0) stop("argument CONTROL_ID must be seperated by comma without space")
if(length((IDs = c(TREAT_IDs, CONTROL_IDs))) != ncol(data)) stop("TREAT_ID and CONTROL_ID has error in the input data")
if(length((col_pos = match(TREAT_IDs, colnames(data)))) == 0) stop("argument TREAT_ID must match with column name of input crest-matrix")
if(length((col_neg = match(CONTROL_IDs, colnames(data)))) == 0) stop("argument CONTROL_ID must match with column name of input crest-matrix")
groups = rep(1, ncol(data))
groups[col_pos] = 2

if(length(i <- which(rowSums(cpm(data) > MIN_CPM) >= (ncol(data)/3)))) data_filtered <- data[i,]
y <- DGEList(data_filtered, group=factor(groups))
design <- model.matrix(~factor(groups))
xglm <- estimateDisp(y, design)
fit <- glmFit(xglm, design)
lrt <- glmLRT(fit, coef=2)
table <- lrt$table
table$score <- sign(table$logFC) * (log(table$PValue))
table <- table[order(table$score),]
table$rank <- 1:nrow(table)
write.table(table[order(rownames(table)),], file = FOUT_NAME, append = FALSE, quote = FALSE, sep = "\t",
            eol = "\n", na = "NA", dec = ".", row.names = TRUE,
            col.names = TRUE, qmethod = c("escape", "double"),
            fileEncoding = "")

